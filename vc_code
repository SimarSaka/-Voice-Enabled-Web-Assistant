<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Voice Assistant</title>
    <style>
        /* General styles */
        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #1e90ff, #87ceeb);
            color: white;
            text-align: center;
            padding: 0;
            margin: 0;
            height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        h1 {
            font-size: 3rem;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6);
        }

        p {
            font-size: 1.2rem;
            margin-bottom: 30px;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
        }

        button {
            background-color: #ff6347;
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 1.2rem;
            border-radius: 50px;
            cursor: pointer;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }

        button:hover {
            background-color: #ff4500;
            box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.5);
            transform: scale(1.05);
        }

        #log {
            margin-top: 30px;
            width: 60%;
            max-height: 200px;
            overflow-y: auto;
            padding: 10px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.3);
            color: black;
            font-size: 1rem;
            text-align: left;
            overflow-x: hidden;
        }

        #log p {
            margin: 5px 0;
            color: #fff;
            font-size: 1.1rem;
            text-shadow: none;
        }

        #log::-webkit-scrollbar {
            width: 10px;
        }

        #log::-webkit-scrollbar-thumb {
            background: #ff6347;
            border-radius: 10px;
        }

        #log::-webkit-scrollbar-thumb:hover {
            background: #ff4500;
        }

        /* Responsive styling */
        @media (max-width: 768px) {
            h1 {
                font-size: 2.5rem;
            }

            p {
                font-size: 1rem;
            }

            button {
                font-size: 1rem;
                padding: 10px 20px;
            }

            #log {
                width: 90%;
            }
        }
    </style>
</head>
<body>
    <h1>Voice Assistant</h1>
    <p>Click the button and start speaking!</p>
    <button id="start-btn">ðŸŽ¤ Start Listening</button>
    <div id="log"></div>

    <script>
        const logDiv = document.getElementById('log');
        const startBtn = document.getElementById('start-btn');

        // Initialize Web Speech API components
        const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
        const synth = window.speechSynthesis;

        recognition.lang = 'en-US';
        recognition.interimResults = false;

        // Log helper
        const log = (message) => {
            logDiv.innerHTML += `<p>${message}</p>`;
            logDiv.scrollTop = logDiv.scrollHeight; // Auto-scroll to the bottom
        };

        // Function to speak a response
        const speak = (text) => {
            const utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = 'en-US';
            utterance.rate = 1; // Adjust the speed if needed
            utterance.pitch = 1; // Adjust the pitch if needed
            synth.speak(utterance);
            log(`Assistant: ${text}`);
        };

        // Define the commands
        const processCommand = (command) => {
            command = command.toLowerCase();
            log(`You: ${command}`);

            if (command.includes('hello') || command.includes('hi')) {
                speak("Hello! How can I assist you?");
            } else if (command.includes('shut down')) {
                speak("Shutting down the system...");
                fetch('', { 
                    method: 'POST', 
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: new URLSearchParams({ action: 'shutdown' })
                })
                .then(response => response.json())
                .then(data => log(data.message))
                .catch(error => log(`Error: ${error}`));
            } else if (command.includes('sleep')) {
                speak("Putting the system to sleep...");
                fetch('', { 
                    method: 'POST', 
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: new URLSearchParams({ action: 'sleep' })
                })
                .then(response => response.json())
                .then(data => log(data.message))
                .catch(error => log(`Error: ${error}`));
            } else if (command.includes('who are you')) {
                speak("I am your voice assistant, ready to help you.");
            } else if (command.includes('open youtube')) {
                speak("Opening YouTube.");
                window.open("https://www.youtube.com", "_blank");
            } else if (command.includes('read a fact')) {
                const facts = [
                    "Honey never spoils. Archaeologists have found pots of honey in ancient Egyptian tombs that are over 3,000 years old and still edible.",
                    "Octopuses have three hearts and blue blood.",
                    "A day on Venus is longer than a year on Venus.",
                    "Bananas are berries, but strawberries aren't.",
                    "Sharks existed before trees. They have been around for more than 400 million years!"
                ];
                const fact = facts[Math.floor(Math.random() * facts.length)];
                speak(fact);
            } else if (command.includes('open google')) {
                speak("Opening Google.");
                window.open("https://www.google.com", "_blank");
            } else if (command.includes('tell me a joke')) {
                const jokes = [
                    "Why don't scientists trust atoms? Because they make up everything!",
                    "Why did the scarecrow win an award? Because he was outstanding in his field!",
                    "Why don't skeletons fight each other? They don't have the guts.",
                    "What do you call fake spaghetti? An impasta!",
                    "Why can't your nose be 12 inches long? Because then it would be a foot!"
                ];
                const joke = jokes[Math.floor(Math.random() * jokes.length)];
                speak(joke);
            } else if (command.includes('time')) {
                const now = new Date();
                const time = now.toLocaleTimeString();
                speak(`The current time is ${time}.`);
            } else if (command.includes('date')) {
                const now = new Date();
                const date = now.toDateString();
                speak(`Today's date is ${date}.`);
            } else if (command.includes('goodbye')) {
                speak("Goodbye! Have a great day.");
            } else if (command.includes('how are you')) {
                speak("I'm just a program, but I'm here to make your day better!");
            } else if (command.includes('motivate me')) {
                const quotes = [
                    "The only way to do great work is to love what you do. - Steve Jobs",
                    "Success is not final, failure is not fatal: It is the courage to continue that counts. - Winston Churchill",
                    "Believe you can and you're halfway there. - Theodore Roosevelt",
                    "Your limitationâ€”itâ€™s only your imagination.",
                    "Push yourself, because no one else is going to do it for you."
                ];
                const quote = quotes[Math.floor(Math.random() * quotes.length)];
                speak(quote);
            } else if (command.includes('play music')) {
                speak("Playing some music for you.");
                window.open("https://www.spotify.com", "_blank");
            } else if (command.includes('news')) {
                speak("Opening the latest news for you.");
                window.open("https://news.google.com", "_blank");
            } else if (command.includes('flip a coin')) {
                const result = Math.random() > 0.5 ? 'Heads' : 'Tails';
                speak(`The result is ${result}.`);
            } else if (command.includes('roll a dice')) {
                const result = Math.floor(Math.random() * 6) + 1;
                speak(`You rolled a ${result}.`);
            } else if (command.includes('your name')) {
                speak("I am your trusty voice assistant. You can call me Jarvis, Alexa, or whatever you like!");
            } else if (command.includes('your creator')) {
                speak("I was created by a brilliant mind, which I'm sure you'd admire.");
            } else {
                speak("I'm sorry, I didn't understand that. Can you please try again?");
            }
        };

        // Start listening for commands
        startBtn.addEventListener('click', () => {
            recognition.start();
            log("Listening...");
        });

        recognition.onresult = (event) => {
            const command = event.results[0][0].transcript;
            processCommand(command);
        };

        recognition.onerror = (event) => {
            log(`Error: ${event.error}`);
            speak("I encountered an error. Please try again.");
        };
    </script>
</body>
</html>
